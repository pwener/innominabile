{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","textDecoration","to","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","_this","_React$Component","call","state","frame","opacity","counter","changeBackground","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","componentDidMount","timeEvt","setInterval","componentWillUnmount","clearInterval","setState","prevState","Math","sin","_this$props","_this$state","console","info","header","react__WEBPACK_IMPORTED_MODULE_2___default","fontFamily","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","color","indexFooter","backgroundImage","position","height","width","zIndex","marginLeft","marginRight","maxWidth","padding","__PATH_PREFIX__","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","phrases","bioQuery","Bio","display","Date","now","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-index-js-afbed1422ae3440e32e8.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"...\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{\n                    boxShadow: `none`, \n                    textDecoration: `none`,\n                  }} \n                  to={node.fields.slug}\n                >\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\n\nconst typography = new Typography({\n  baseFontSize: '20px',\n  baseLineHeight: 2,\n  headerFontFamily: ['Bad Script', 'cursive'],\n  bodyFontFamily: ['Bad Script', 'cursive'],\n  googleFonts: [\n  {\n    name: 'Bad Script',\n    styles: [\n      '300',\n      '400',\n      '500',\n      '600',\n      '700'\n    ],\n  }\n]\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst downLimit = 0.35;\n\nclass Layout extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      frame: 1,\n      opacity: 1,\n      counter: 0,\n    }\n    this.changeBackground = this.changeBackground.bind(this);\n  }\n\n  componentDidMount() {\n    this.timeEvt = setInterval(this.changeBackground, 500);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeEvt);\n  }\n\n  changeBackground() {\n    this.setState(prevState => ({\n      counter: prevState.counter + 1,\n      opacity: ((Math.sin(prevState.counter) + 3) / 6),\n      frame: prevState.opacity <= downLimit ? (prevState.frame + 1) % 3 : prevState.frame,\n    }));\n  }\n\n  render() {\n    const { location, title, children } = this.props\n\n    const { frame, opacity } = this.state;\n\n    console.info(opacity);\n\n    const rootPath = `${__PATH_PREFIX__}/`\n\n    let header = (\n      <h3\n        style={{\n          fontFamily: 'Bad Script',\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n\n    const indexFooter = (\n      <footer>\n        Porque algumas coisas não são nomeáveis... Se quer expressáveis, então desculpa.\n      </footer>\n    );\n\n    return (\n      <div>\n        <div\n          style={{\n            backgroundImage: `url(../static/images/quadro${frame}.png)`,\n            opacity: opacity,\n            position: 'fixed',\n            height: '100vh',\n            width: '100%',\n            zIndex: -1,\n          }}\n        >\n        </div>\n        <div\n          style={{\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(24),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n          }}\n        >\n          {location.pathname !== rootPath ? header : null}\n\n          {children}\n\n          {location.pathname === rootPath ? indexFooter : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst phrases = [\n  (<p>Escrito por <strong>alguém</strong> que não se leva a sério.</p>),\n  (<p>Escrito por <strong>Mr. Nobody</strong>.</p>),\n  (<p>Escrito por... Ah <strong>tanto faz...</strong></p>),\n  (<p>Escrito por um heterônimo sem nome...</p>),\n  (<p>Escrito por <strong>alguém</strong> que com certeza tem dificuldades em se definir.</p>),\n];\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            {phrases[Date.now() % phrases.length]}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_seo__WEBPACK_IMPORTED_MODULE_6__","frontmatter","description","excerpt","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","_components_Bio__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","rel","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Layout","_this","_React$Component","call","state","frame","opacity","counter","changeBackground","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","componentDidMount","timeEvt","setInterval","componentWillUnmount","clearInterval","setState","prevState","Math","sin","_this$props","_this$state","header","fontFamily","boxShadow","textDecoration","color","indexFooter","backgroundImage","position","height","width","zIndex","marginLeft","marginRight","maxWidth","padding","__PATH_PREFIX__","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","phrases","bioQuery","Bio","gatsby__WEBPACK_IMPORTED_MODULE_2__","Date","now","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-blog-post-js-cf4e52c851392025a5a5.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        {\n          <Link to=\"/\" rel=\"prev\">\n            ‚Üê Voltar\n          </Link>\n        }\n\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\n\nconst typography = new Typography({\n  baseFontSize: '20px',\n  baseLineHeight: 2,\n  headerFontFamily: ['Bad Script', 'cursive'],\n  bodyFontFamily: ['Bad Script', 'cursive'],\n  googleFonts: [\n  {\n    name: 'Bad Script',\n    styles: [\n      '300',\n      '400',\n      '500',\n      '600',\n      '700'\n    ],\n  }\n]\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst downLimit = 0.35;\n\nclass Layout extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      frame: 1,\n      opacity: 1,\n      counter: 0,\n    }\n    this.changeBackground = this.changeBackground.bind(this);\n  }\n\n  componentDidMount() {\n    this.timeEvt = setInterval(this.changeBackground, 500);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeEvt);\n  }\n\n  changeBackground() {\n    this.setState(prevState => ({\n      counter: prevState.counter + 1,\n      opacity: ((Math.sin(prevState.counter) + 3) / 6),\n      frame: prevState.opacity <= downLimit ? (prevState.frame + 1) % 3 : prevState.frame,\n    }));\n  }\n\n  render() {\n    const { location, title, children } = this.props\n\n    const { frame, opacity } = this.state;\n\n    const rootPath = `${__PATH_PREFIX__}/`\n\n    let header = (\n      <h3\n        style={{\n          fontFamily: 'Bad Script',\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n\n    const indexFooter = (\n      <footer>\n        Porque algumas coisas n√£o s√£o nome√°veis... Se quer express√°veis, ent√£o desculpa.\n      </footer>\n    );\n\n    return (\n      <div>\n        <div\n          style={{\n            backgroundImage: `url(static/images/quadro${frame}.png)`,\n            opacity: opacity,\n            position: 'fixed',\n            height: '100vh',\n            width: '100%',\n            zIndex: -1,\n          }}\n        >\n        </div>\n        <div\n          style={{\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(24),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n          }}\n        >\n          {location.pathname !== rootPath ? header : null}\n\n          {children}\n\n          {location.pathname === rootPath ? indexFooter : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst phrases = [\n  (<p>Escrito por <strong>algu√©m</strong> que n√£o se leva a s√©rio.</p>),\n  (<p>Escrito por <strong>Mr. Nobody</strong>.</p>),\n  (<p>Escrito por... Ah <strong>tanto faz...</strong></p>),\n  (<p>Escrito por um heter√¥nimo sem nome...</p>),\n  (<p>Escrito por <strong>algu√©m</strong> que com certeza tem dificuldades em se definir.</p>),\n];\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            {phrases[Date.now() % phrases.length]}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}